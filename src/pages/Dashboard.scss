@import '../variables.scss';

.dashboard {
  padding: 2rem;
  max-width: 1200px;
  margin: 0 auto;

  .page-header {
    margin-bottom: 2rem;
    
    h1 {
      font-size: 2rem;
      margin-bottom: 0.5rem;
      
    .dark & {
        color: $primary;
      }
      
      .light & {
        color: $light-mode-text;
      }
    }
    
    p {
      .dark & {
        color: $secondary;
      }
      
    .light & {
        color: $light-mode-text;
      }
      
      font-size: 1.1rem;
    }
  }

  .features-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1.5rem;
    margin-bottom: 2rem;

    .feature-card {
      .dark & {
        background-color: $card-bg;
        color: $primary;
      }
      
      .light & {
        background-color: $light-mode-card;
        color: $light-mode-text;
      }
      
      padding: 1.5rem;
      border-radius: $border-radius-md;
      box-shadow: $shadow-sm;
      transition: transform 0.3s ease, box-shadow 0.3s ease;
      cursor: pointer;
      text-decoration: none;
      display: block;

      &:hover {
        transform: translateY(-2px);
        box-shadow: $shadow-md;
      }

      h3 {
        margin-bottom: 0.5rem;
        font-size: 1.25rem;
        
        .dark & {
          color: $primary;
        }
        
        .light & {
          color: $light-mode-text;
        }
      }

      p {
        .dark & {
          color: $secondary;
        }
        
        .light & {
          color: $light-mode-text;
        }
        
        font-size: 0.9rem;
        margin-bottom: 0;
      }
    }
  }

  &.light .features-grid .feature-card {
    background-color: $light-mode-card !important;
    color: $light-mode-text !important;
    border: 1px solid rgba($light-mode-text, 0.1) !important;
    
    h3, p {
      color: $light-mode-text !important;
    }
  }

  .quote-card {
    .dark & {
      background-color: $card-bg;
      color: $primary;
    }
    
    .light & {
      background-color: $light-mode-card;
      color: $light-mode-text;
    }
    
    padding: 2rem;
    border-radius: $border-radius-md;
    box-shadow: $shadow-sm;
    margin-bottom: 2rem;
    position: relative;
    overflow: hidden;

    &::before {
      content: '"';
      position: absolute;
      top: -20px;
      left: 20px;
      font-size: 120px;
      opacity: 0.1;
      font-family: serif;
    }

    .quote-text {
      font-size: 1.2rem;
      font-style: italic;
      margin-bottom: 1rem;
      
      .dark & {
        color: $primary;
      }
      
      .light & {
        color: $light-mode-text;
      }
    }

    .quote-author {
      text-align: right;
      font-weight: 500;
      
      .dark & {
        color: $secondary;
      }
      
      .light & {
        color: $light-mode-text;
      }
    }
  }

  .mood-tracker {
    .dark & {
      background-color: $card-bg;
      color: $primary;
    }
    
    .light & {
      background-color: $light-mode-card;
      color: $light-mode-text;
    }
    
    padding: 1.5rem;
    border-radius: $border-radius-md;
    box-shadow: $shadow-sm;
    margin-bottom: 2rem;

    h2 {
      margin-bottom: 1rem;
      
      .dark & {
        color: $primary;
      }
      
      .light & {
        color: $light-mode-text;
      }
    }

    .mood-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
      gap: 1rem;
    }
  }

.dashboard-header {
  text-align: center;
    margin-bottom: 2.5rem;

  .motivational-quote-status {
    font-size: 1rem;
      
      .dark & {
        color: $secondary;
      }
      
      .light & {
        color: $light-mode-text;
      }
      
    min-height: 1.5em;
      margin-bottom: 0.75rem;
    font-style: italic;

    &.error {
      color: $danger;
      font-weight: 500;
      }
    }

    .motivational-quote {
      font-size: 1.2rem;
      
      .dark & {
        color: $primary;
      }
      
      .light & {
        color: $light-mode-text;
      }
      
      font-style: italic;
      margin-bottom: 1rem;
      padding: 0 1rem;
      min-height: 1.5em;
      line-height: 1.6;
    }

    h1 {
      .dark & {
        color: $primary;
      }
      
      .light & {
        color: $light-mode-text;
      }
      
      font-size: 2rem;
      margin: 0;
    }
  }

  h1 {
    .dark & {
      color: $primary;
    }
    
    .light & {
      color: $light-mode-text;
    }
    
    margin-bottom: 2rem;
    font-size: 2rem;
  }

  .dashboard-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.5rem;
    padding: 1rem 0;
  }

  .dashboard-card {
    .dark & {
      background: $card-bg;
      border: 1px solid rgba($primary, 0.1);
    }
    
    .light & {
      background: $light-mode-card;
      border: 1px solid rgba($light-mode-text, 0.1);
    }
    
    border-radius: $border-radius-lg;
    padding: 1.5rem;
    cursor: pointer;
    transition: all $transition-normal;
    position: relative;
    overflow: hidden;

    &:hover {
      transform: translateY(-5px);
      box-shadow: $shadow-lg;
      
      .dark & {
        border-color: $primary;
      }
      
      .light & {
        border-color: $light-mode-text;
      }

      .card-icon {
        transform: scale(1.1);
      }
    }

    .card-icon {
      font-size: 2rem;
      margin-bottom: 1rem;
      transition: transform $transition-normal;
    }

    h3 {
      .dark & {
        color: $primary;
      }
      
      .light & {
        color: $light-mode-text;
      }
      
      margin-bottom: 0.5rem;
      font-size: 1.25rem;
    }

    p {
      .dark & {
        color: $secondary;
      }
      
      .light & {
        color: $light-mode-text;
      }
      
      font-size: 0.9rem;
      line-height: 1.5;
    margin: 0;
    }

    &::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 4px;
      
      .dark & {
        background: $primary;
      }
      
      .light & {
        background: $light-mode-text;
      }
      
      transform: scaleX(0);
      transition: transform $transition-normal;
      transform-origin: left;
    }

    &:hover::after {
      transform: scaleX(1);
    }
  }
}

.prophecy-quote-card {
  .dark & {
    background: linear-gradient(135deg, rgba($primary,0.12) 0%, rgba($accent,0.10) 100%);
    border: 2.5px solid $accent;
  }
  
  .light & {
    background: linear-gradient(135deg, rgba($light-mode-text,0.12) 0%, rgba($accent,0.10) 100%);
    border: 2.5px solid $light-mode-text;
  }
  
  border-radius: 1.5rem;
  box-shadow: 0 0 24px 4px rgba($accent, 0.25), 0 2px 16px 0 rgba($primary, 0.10);
  padding: 2.5rem 2rem 2rem 2rem;
  margin: 0 auto 2.5rem auto;
  max-width: 800px;
  min-height: 180px;
  text-align: center;
  position: relative;
  animation: prophecyFadeIn 1.2s cubic-bezier(0.4, 0, 0.2, 1);
}

.prophecy-icon {
  font-size: 2.8rem;
  margin-bottom: 0.5rem;

  .dark & {
    animation: prophecyGlowDark 2.5s infinite alternate;
    filter: drop-shadow(0 0 8px $accent);
  }
  .light & {
    animation: prophecyGlowLight 2.5s infinite alternate;
    filter: drop-shadow(0 0 8px $light-mode-text);
  }
  }

  .prophecy-title {
    font-family: 'Cinzel Decorative', serif;
  font-size: 1.3rem;
  
  .dark & {
    color: $accent;
  }
  
  .light & {
    color: $light-mode-text;
  }
  
  letter-spacing: 0.08em;
  margin-bottom: 1.1rem;
  text-shadow: 0 2px 8px rgba($accent, 0.18);
  }

  .prophecy-quote {
    font-family: 'Playfair Display', serif;
  font-size: 1.35rem;
  
  .dark & {
    color: $primary;
  }
  
  .light & {
    color: $light-mode-text;
  }
  
    font-style: italic;
  line-height: 1.7;
    margin: 0 auto;
  padding: 0 1rem;
  text-shadow: 0 2px 12px rgba($primary, 0.10);
    position: relative;
}

@keyframes prophecyGlowDark {
  from { filter: drop-shadow(0 0 8px $accent); }
  to   { filter: drop-shadow(0 0 18px lighten($accent, 10%)); }
}
@keyframes prophecyGlowLight {
  from { filter: drop-shadow(0 0 8px $light-mode-text); }
  to   { filter: drop-shadow(0 0 18px darken($light-mode-text, 10%)); }
}

@keyframes prophecyFadeIn {
  from {
    opacity: 0;
    transform: translateY(-30px) scale(0.98);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

@media (max-width: $breakpoint-md) {
  .dashboard {
    padding: 1rem;

    .dashboard-header {
      margin-bottom: 2rem;
      .motivational-quote {
        font-size: 1.1rem;
      }
      h1 {
        font-size: 1.8rem;
      }
    }

    .dashboard-grid {
      grid-template-columns: 1fr;
    }
  }
}

.light .dashboard [style*='color: #F1DB4B'],
.light .dashboard .accent-text {
  -webkit-text-stroke: 0.4px #000;
  text-stroke: 0.4px #000;
}

// -----------------------------------------------------------------------------
// START: New Animations & Effects Snippet
// -----------------------------------------------------------------------------

// --- 1. New Keyframes ---

@keyframes animatedGradientMovement {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

@keyframes cardEntryAnimation {
  from {
    opacity: 0;
    transform: translateY(35px) scale(0.92);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

@keyframes textShimmerEffect {
  0% { background-position: -250% center; }
  100% { background-position: 250% center; }
}

@keyframes quoteIconPulseEffect {
  0%, 100% { transform: scale(1) rotate(-5deg); opacity: 0.08; }
  50% { transform: scale(1.20) rotate(5deg); opacity: 0.18; }
}

@keyframes prophecyCardAuraDark {
  0% {
    box-shadow: 0 0 35px -8px rgba($accent, 0.25),
                0 0 55px -12px rgba($primary, 0.2) inset,
                0 0 20px -2px rgba(lighten($accent,10%), 0.22);
    opacity: 0.65;
  }
  50% {
    box-shadow: 0 0 45px 0px rgba($accent, 0.35),
                0 0 70px -8px rgba($primary, 0.25) inset,
                0 0 30px 8px rgba(lighten($accent,15%), 0.3);
    opacity: 1;
  }
  100% {
    box-shadow: 0 0 35px -8px rgba($accent, 0.25),
                0 0 55px -12px rgba($primary, 0.2) inset,
                0 0 20px -2px rgba(lighten($accent,10%), 0.22);
    opacity: 0.65;
  }
}

@keyframes prophecyCardAuraLight {
  0% {
    box-shadow: 0 0 35px -8px rgba($light-mode-text, 0.12),
                0 0 55px -12px rgba(darken($light-mode-text, 20%), 0.12) inset,
                0 0 20px -2px rgba(lighten($accent,20%), 0.18);
    opacity: 0.55;
  }
  50% {
    box-shadow: 0 0 45px 0px rgba($light-mode-text, 0.18),
                0 0 70px -8px rgba(darken($light-mode-text, 20%), 0.18) inset,
                0 0 30px 8px rgba(lighten($accent,25%), 0.22);
    opacity: 0.9;
  }
  100% {
    box-shadow: 0 0 35px -8px rgba($light-mode-text, 0.12),
                0 0 55px -12px rgba(darken($light-mode-text, 20%), 0.12) inset,
                0 0 20px -2px rgba(lighten($accent,20%), 0.18);
    opacity: 0.55;
  }
}

 
@keyframes prophecyGlowDark { // Renamed from original to avoid conflict if you merge manually
  0%   { filter: drop-shadow(0 0 7px $accent) drop-shadow(0 0 3px $accent); opacity: 0.75; transform: scale(1); }
  50%  { filter: drop-shadow(0 0 22px lighten($accent, 12%)) drop-shadow(0 0 12px lighten($accent, 7%)); opacity: 1; transform: scale(1.08); }
  100% { filter: drop-shadow(0 0 7px $accent) drop-shadow(0 0 3px $accent); opacity: 0.75; transform: scale(1); }
}
@keyframes prophecyGlowLight { // Renamed from original
  0%   { filter: drop-shadow(0 0 7px $light-mode-text) drop-shadow(0 0 3px $light-mode-text); opacity: 0.65; transform: scale(1); }
  50%  { filter: drop-shadow(0 0 22px darken($light-mode-text, 12%)) drop-shadow(0 0 12px darken($light-mode-text, 7%)); opacity: 1; transform: scale(1.08); }
  100% { filter: drop-shadow(0 0 7px $light-mode-text) drop-shadow(0 0 3px $light-mode-text); opacity: 0.65; transform: scale(1); }
}



.dashboard {
  .dark & {
    background: linear-gradient(250deg, darken($background, 2%), $background, darken($background, 4%), rgba($secondary, 0.3));
    background-size: 300% 300%;
    animation: animatedGradientMovement 20s ease infinite;
  }

  .light & {
    background: linear-gradient(250deg, lighten($light-mode-bg, 1%), $light-mode-bg, lighten($light-mode-bg, 3%), rgba($accent, 0.05));
    background-size: 300% 300%;
    animation: animatedGradientMovement 25s ease infinite;
  }
}

.dashboard-grid {
  .dashboard-card {
    
    animation: cardEntryAnimation 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
    opacity: 0; 

    @for $i from 1 through 15 {
      &:nth-child(#{$i}) {
        animation-delay: #{$i * 0.08}s;
      }
    }

    &:hover {
      .dark & {
        box-shadow: $shadow-lg, 0 0 28px rgba($primary, 0.25), 0 0 12px rgba($accent, 0.15);
      }
      .light & {
        box-shadow: $shadow-lg, 0 0 28px rgba($light-mode-text, 0.18), 0 0 12px rgba($accent, 0.1);
      }
    }
  }
}


.page-header h1 {
  position: relative; 

  .dark & {
    background: linear-gradient(to right, lighten($primary,10%) 20%, $accent 40%, $accent 60%, lighten($primary,10%) 80%);
    background-size: 250% auto;
    color: transparent;
    background-clip: text;
    -webkit-background-clip: text;
    animation: textShimmerEffect 4s linear infinite;
    will-change: background-position; 
  }

  .light & {
    background: linear-gradient(to right, $light-mode-text 20%, lighten($accent,5%) 40%, lighten($accent,5%) 60%, $light-mode-text 80%);
    background-size: 250% auto;
    color: transparent;
    background-clip: text;
    -webkit-background-clip: text;
    animation: textShimmerEffect 4.5s linear infinite;
    will-change: background-position; 
  }
}

.quote-card {
  &::before {
    animation: quoteIconPulseEffect 5s ease-in-out infinite 0.8s;
    transform-origin: center center; 
    will-change: transform, opacity; 
  }
}


.prophecy-quote-card {
  &::before { 
    content: '';
    position: absolute;
    top: -12px; right: -12px; bottom: -12px; left: -12px;
    border-radius: calc(1.5rem + 12px); 
    pointer-events: none; 
    z-index: -1; 
    opacity: 0; 

    .dark & {
      animation: prophecyCardAuraDark 6s ease-in-out infinite 1s;
    }
    .light & {
      animation: prophecyCardAuraLight 6s ease-in-out infinite 1s;
    }
    will-change: box-shadow, opacity; 
  }
}


.prophecy-icon {
  .dark & {
    animation: prophecyGlowDark 3s ease-in-out infinite;
  }
  .light & {
    animation: prophecyGlowLight 3s ease-in-out infinite;
  }
  will-change: filter, transform, opacity; 
}
